import React, { memo } from 'react';
import { Emoji } from './Emoji';
import { useTheme } from './CountryTheme';
import { useContext } from './CountryContext';
import { Image, StyleSheet, PixelRatio, Text, View, Platform } from 'react-native';
const styles = StyleSheet.create({
    container: {
        justifyContent: 'center',
        alignItems: 'center',
        width: 30,
        marginRight: 10
    },
    emojiFlag: {
        alignItems: 'center',
        justifyContent: 'center',
        fontSize: Platform.select({ android: 20, default: 30 }),
        borderWidth: 1 / PixelRatio.get(),
        borderColor: 'transparent',
        backgroundColor: 'transparent'
    },
    imageFlag: {
        resizeMode: 'contain',
        width: 25,
        height: 19,
        borderWidth: 1 / PixelRatio.get(),
        opacity: 0.8
    }
});
const ImageFlag = memo(({ countryCode }) => {
    const { primaryColorVariant } = useTheme();
    const { getImageFlag } = useContext();
    return (React.createElement(Image, { resizeMode: 'contain', style: [styles.imageFlag, { borderColor: primaryColorVariant }], source: { uri: getImageFlag(countryCode) } }));
});
const EmojiFlag = memo(({ countryCode }) => {
    const { getEmojiFlag } = useContext();
    return (React.createElement(Text, { style: styles.emojiFlag, allowFontScaling: false },
        React.createElement(Emoji, { name: getEmojiFlag(countryCode) })));
});
export const Flag = ({ countryCode, withEmoji, withFlagButton }) => withFlagButton ? (React.createElement(View, { style: styles.container }, withEmoji ? (React.createElement(EmojiFlag, Object.assign({}, { countryCode }))) : (React.createElement(ImageFlag, Object.assign({}, { countryCode }))))) : null;
Flag.defaultProps = {
    withEmoji: true,
    withFlagButton: true
};
//# sourceMappingURL=Flag.js.map