import React, { memo } from 'react';
import { TouchableOpacity, StyleSheet, View, Platform } from 'react-native';
import { Flag } from './Flag';
import { useContext } from './CountryContext';
import { getCountryCallingCode } from './CountryService';
import { CountryText } from './CountryText';
const styles = StyleSheet.create({
    container: {
        alignItems: 'flex-start',
        justifyContent: 'flex-start'
    },
    containerWithEmoji: {
        marginTop: 0
    },
    containerWithoutEmoji: {
        marginTop: 5
    },
    flagWithSomethingContainer: {
        flexDirection: 'row',
        flexWrap: 'wrap',
        alignItems: 'center'
    },
    something: { fontSize: 16 }
});
const FlagWithSomething = memo(({ countryCode, withEmoji, withCountryNameButton, withCurrencyButton, withCallingCodeButton, withFlagButton }) => {
    const { translation, getCountryName, getCountryCurrency } = useContext();
    const countryName = withCountryNameButton && getCountryName(countryCode, translation);
    const currency = withCurrencyButton && getCountryCurrency(countryCode);
    const callingCode = withCallingCodeButton && getCountryCallingCode(countryCode);
    return (React.createElement(View, { style: styles.flagWithSomethingContainer },
        React.createElement(Flag, Object.assign({}, { withEmoji, countryCode, withFlagButton })),
        countryName ? (React.createElement(CountryText, { style: [styles.something] }, countryName + ' ')) : null,
        currency ? (React.createElement(CountryText, { style: styles.something }, `(${currency}) `)) : null,
        callingCode ? (React.createElement(CountryText, { style: styles.something }, `+${callingCode}`)) : null));
});
export const FlagButton = ({ withEmoji, withCountryNameButton, withCallingCodeButton, withCurrencyButton, withFlagButton, countryCode, containerButtonStyle, onOpen }) => {
    const withSomething = withCountryNameButton || withCallingCodeButton || withCurrencyButton;
    return (React.createElement(TouchableOpacity, { activeOpacity: 0.7, onPress: onOpen },
        React.createElement(View, { style: [
                styles.container,
                withEmoji ? styles.containerWithEmoji : styles.containerWithoutEmoji,
                containerButtonStyle
            ] }, withSomething ? (React.createElement(FlagWithSomething, Object.assign({}, {
            countryCode,
            withEmoji,
            withCountryNameButton,
            withCallingCodeButton,
            withCurrencyButton,
            withFlagButton
        }))) : (React.createElement(Flag, Object.assign({}, { countryCode, withEmoji, withFlagButton }))))));
};
FlagButton.defaultProps = {
    withEmoji: Platform.OS === 'ios',
    withCountryNameButton: false,
    withCallingCodeButton: false,
    withCurrencyButton: false,
    withFlagButton: true
};
//# sourceMappingURL=FlagButton.js.map